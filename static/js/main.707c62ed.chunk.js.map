{"version":3,"sources":["common/components/container.js","common/components/grid.js","common/constants/screens.js","common/components/link.js","common/components/typography.js","common/constants/colors.js","components/header/header.js","components/home/home.js","components/projects/projects.js","components/resume/fixtures/skills.js","components/resume/components/skills.js","components/resume/fixtures/experience.js","common/helpers/index.js","components/resume/components/experience.js","components/resume/resume.js","components/secret/secret.js","App.js","serviceWorker.js","index.js"],"names":["Box","styled","div","props","align","direction","justify","Container","Section","Grid","getWidth","val","GridItem","sm","md","lg","xl","ExternalLink","a","RouteLink","Link","Span","span","color","fontSize","Text","text","Title","h1","Subtitle","h2","HeaderWrapper","Header","title","subtitle","StyledGridItem","ROUTE_ITEMS","to","content","LIST_ITEMS","href","Home","map","key","target","PROJECTS","Projects","StyledBox","SKILLS","tools","value","languages","Skills","EXPERIENCE","company","job","location","duration","start","end","DESCRIPTION","wealthsimple","snaptravel","league","salesforce","monthYearFormat","date","moment","format","renderDescription","pt","i","Experience","List","ListItem","toLocaleLowerCase","li","ul","Resume","Secret","role","aria-label","Background","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.707c62ed.chunk.js","sourcesContent":["// @flow\nimport styled from \"styled-components\";\n\nexport const Box = styled.div`\n  align-items: ${props => props.align || \"flex-start\"};\n  display: flex;\n  flex-direction: ${props => props.direction || \"row\"};\n  justify-content: ${props => props.justify || \"flex-start\"};\n`;\n\nexport const Container = styled(Box)`\n  padding: 5% 10%;\n  width: 100%;\n`;\n\nexport const Section = styled(Box)`\n  padding: 0 10%;\n  margin-bottom: 30px;\n`;\n","// @flow\nimport styled from \"styled-components\";\nimport { medium, large, xlarge } from \"../constants/screens\";\n\nexport const Grid = styled.div`\n  display: flex;\n  flex-direction: ${props => props.direction || \"row\"};\n  justify-content: space-evenly;\n`;\n\nconst getWidth = val => {\n  return (val / 12) * 100;\n};\n\nexport const GridItem = styled.div`\n  width: ${props => getWidth(props.sm)}%;\n  @media only screen and (min-width: ${medium}) {\n    width: ${props => getWidth(props.md)}%;\n  }\n  @media only screen and (min-width: ${large}) {\n    width: ${props => getWidth(props.lg)}%;\n  }\n  @media only screen and (min-width: ${xlarge}) {\n    width: ${props => getWidth(props.xl)}%;\n  }\n`;\n","export const medium = \"768px\";\nexport const large = \"1024px\";\nexport const xlarge = \"1440px\";\n","// @flow\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const ExternalLink = styled.a`\n  margin: 0 0 10px 0;\n`;\n\nexport const RouteLink = styled(Link)`\n  margin: 0 0 10px 0;\n`;\n","// @flow\nimport styled from \"styled-components\";\nimport { black } from \"../constants/colors\";\n\nexport const Span = styled.span`\n  color: ${props => props.color || black};\n  font-size: ${props => props.fontSize || \"14px\"};\n`;\n\nexport const Text = styled.text`\n  color: ${props => props.color || black};\n  font-size: ${props => props.fontSize || \"18px\"};\n  margin-bottom: 10px;\n`;\n","export const black = \"#000\";\nexport const white = \"#fff\";\n\nexport const background = \"#F3F8F2\";\nexport const greyscaleDark = \"#2E2E2E\";\nexport const greyscaleDarker = \"#171717\";\nexport const greyscaleLight = \"#454545\";\nexport const greyscaleLighter = \"#5C5C5C\";\n\nexport const basePink = \"#EF798A\";\nexport const lightPink = \"#F7A9A8\";\nexport const blue = \"#7D82B8\";\nexport const basePurple = \"#613F75\";\nexport const lightPurple = \"#E5C3D1\";\n","// @flow\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Box } from \"../../common/components\";\nimport { greyscaleDarker, greyscaleDark } from \"../../common/constants/colors\";\n\nconst Title = styled.h1`\n  color: ${greyscaleDarker};\n  margin: 0 0 10px 0;\n`;\n\nconst Subtitle = styled.h2`\n  color: ${greyscaleDark};\n  margin: 0 0 10px 0;\n`;\n\nconst HeaderWrapper = styled(Box)`\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nexport const Header = ({ title, subtitle }) => {\n  return (\n    <HeaderWrapper>\n      <Title>{title}</Title>\n      <Subtitle>{subtitle}</Subtitle>\n    </HeaderWrapper>\n  );\n};\n","// @flow\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Header } from \"../header\";\nimport {\n  Box,\n  Grid,\n  GridItem,\n  ExternalLink,\n  RouteLink\n} from \"../../common/components\";\n\nconst GITHUB = \"https://github.com/dmlhyun\";\nconst INSTAGRAM = \"https://www.instagram.com/dmlhyun/\";\nconst LINKEDIN = \"https://www.linkedin.com/in/euihyun/\";\n\nconst Container = styled(Box)`\n  flex-direction: column;\n`;\n\nconst StyledGridItem = styled(GridItem)`\n  display: flex;\n  justify-content: center;\n`;\n\nconst ROUTE_ITEMS = [\n  {\n    to: \"/projects\",\n    content: \"projects\"\n  },\n  {\n    to: \"/resume\",\n    content: \"résumé\"\n  }\n];\n\nconst LIST_ITEMS = [\n  {\n    href: GITHUB,\n    content: \"github\"\n  },\n  {\n    href: LINKEDIN,\n    content: \"linkedin\"\n  },\n  {\n    href: INSTAGRAM,\n    content: \"instagram\"\n  }\n];\n\nconst renderRouteList = () => {\n  return ROUTE_ITEMS.map(({ to, content }) => (\n    <StyledGridItem key={content} sm={12} md={12} lg={12} xl={12}>\n      <RouteLink to={to}>{content}</RouteLink>\n    </StyledGridItem>\n  ));\n};\n\nconst renderLinkList = () => {\n  return LIST_ITEMS.map(({ href, content }) => (\n    <StyledGridItem key={content} sm={12} md={12} lg={12} xl={12}>\n      <ExternalLink href={href} target=\"_blank\">\n        {content}\n      </ExternalLink>\n    </StyledGridItem>\n  ));\n};\n\nexport const Home = () => {\n  return (\n    <Container align=\"center\" justify=\"center\">\n      <Header title=\"andrew\" subtitle=\"software engineer\" />\n      <Grid direction=\"column\">\n        {renderRouteList()}\n        {renderLinkList()}\n      </Grid>\n    </Container>\n  );\n};\n","// @flow\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Box,\n  Grid,\n  GridItem,\n  RouteLink,\n  ExternalLink\n} from \"../../common/components\";\n\nconst BOBA = \"https://www.buildwithboba.com/\";\n\nconst PROJECTS = [\n  {\n    href: BOBA,\n    content: \"boba\"\n  }\n];\n\nconst renderProjectLinks = () => {\n  return PROJECTS.map(({ href, content }) => (\n    <StyledGridItem key={content} sm={12} md={12} lg={12} xl={12}>\n      <ExternalLink href={href} target=\"_blank\">\n        {content}\n      </ExternalLink>\n    </StyledGridItem>\n  ));\n};\n\nexport const Projects = () => {\n  return (\n    <Container align=\"center\" justify=\"center\">\n      <Grid direction=\"column\">\n        <StyledBox>\n          <RouteLink to=\"/\">back</RouteLink>\n        </StyledBox>\n        {renderProjectLinks()}\n      </Grid>\n    </Container>\n  );\n};\n\nconst Container = styled(Box)`\n  flex-direction: column;\n`;\n\nconst StyledGridItem = styled(GridItem)`\n  display: flex;\n  justify-content: center;\n`;\n\nconst StyledBox = styled(Box)`\n  margin-bottom: 20px;\n`;\n","export const SKILLS = {\n  tools: [\n    {\n      key: \"react\",\n      value: \"react\"\n    },\n    {\n      key: \"react-native\",\n      value: \"react native\"\n    },\n    {\n      key: \"redux\",\n      value: \"redux\"\n    },\n    {\n      key: \"sass\",\n      value: \"sass\"\n    },\n    {\n      key: \"graphql\",\n      value: \"graphql\"\n    },\n    {\n      key: \"jest\",\n      value: \"jest\"\n    },\n    {\n      key: \"enzyme\",\n      value: \"enzyme\"\n    },\n    {\n      key: \"express\",\n      value: \"express\"\n    },\n    {\n      key: \"rails\",\n      value: \"ruby on rails\"\n    }\n  ],\n  languages: [\n    {\n      key: \"javascript\",\n      value: \"javascript\"\n    },\n    {\n      key: \"python\",\n      value: \"python\"\n    },\n    {\n      key: \"ruby\",\n      value: \"ruby\"\n    }\n  ]\n};\n","// @flow\nimport React from \"react\";\nimport { Box, Section, Grid, Text, Span } from \"../../../common/components\";\nimport { SKILLS } from \"../fixtures/skills\";\n\nconst renderTools = () =>\n  SKILLS.tools.map(({ key, value }) => (\n    <li key={key}>\n      <Span>{value}</Span>\n    </li>\n  ));\n\nconst renderLangs = () =>\n  SKILLS.languages.map(({ key, value }) => (\n    <li key={key}>\n      <Span>{value}</Span>\n    </li>\n  ));\n\nexport const Skills = () => {\n  return (\n    <Section>\n      <Grid direction=\"column\">\n        <Text>---- skills ----</Text>\n        <Box>\n          <Box direction=\"column\">\n            <Text>tools</Text>\n            <ul>{renderTools()}</ul>\n          </Box>\n          <Box direction=\"column\">\n            <Text>languages</Text>\n            <ul>{renderLangs()}</ul>\n          </Box>\n        </Box>\n      </Grid>\n    </Section>\n  );\n};\n","export const EXPERIENCE = [\n  {\n    key: \"wealthsimple\",\n    company: \"wealthsimple\",\n    job: \"software developer\",\n    location: \"toronto\",\n    duration: {\n      start: \"June 2019\",\n      end: null\n    }\n  },\n  {\n    key: \"snaptravel\",\n    company: \"snaptravel\",\n    job: \"frontend engineer (co-op)\",\n    location: \"toronto\",\n    duration: {\n      start: \"April 2018\",\n      end: \"August 2018\"\n    }\n  },\n  {\n    key: \"league\",\n    company: \"league\",\n    job: \"frontend developer (co-op)\",\n    location: \"toronto\",\n    duration: {\n      start: \"September 2017\",\n      end: \"December 2017\"\n    }\n  },\n  {\n    key: \"salesforce\",\n    company: \"salesforce\",\n    job: \"frontend developer (co-op)\",\n    location: \"san francisco\",\n    duration: {\n      start: \"January 2017\",\n      end: \"April 2017\"\n    }\n  }\n];\n\nexport const DESCRIPTION = {\n  wealthsimple: [\n    \"implemented features on the invest product for both mobile and web's Darwin launch\",\n    \"created endpoints in a GraphQL proxy layer that calls to multiple microservices\",\n    \"to be continued...\"\n  ],\n  snaptravel: [\n    \"developed a new server side rendered landing page to drive organic growth and revenue\",\n    \"created an experimentation feature using Python, Flask, Redis and Express to help A/B test\",\n    \"implement a sharing feature to allow users to share specific hotel deals from their mobile browser to the native app\",\n    \"improve internal asset uploader using AWS S3, Express and React\",\n    \"write unit tests using Python unittest, Jest, Mocha and Enzyme\"\n  ],\n  league: [\n    \"rebuild the admin platform from company's proprietary framework to React\",\n    \"load customer benefit claims into client wihtout hindering performance\",\n    \"render dynamic forms based on information given from backend\",\n    \"increase company's frontend repository test coverage from 30% to 85% using Enzyme and Jest\"\n  ],\n  salesforce: [\n    \"developed in a CMS and CDS architecture with an HTML & React frontend and a PHP, Ruby & Redis backend\",\n    \"assessed and updated client pages to BOIA standards and implement accessible navigation\",\n    \"create a Yeoman script for a template proxy server to reduce setup time by 95%\"\n  ]\n};\n","import moment from \"moment\";\n\nexport const monthYearFormat = date => {\n  if (!date) return \"\";\n  return moment(date).format(\"MMM YYYY\");\n};\n","// @flow\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { EXPERIENCE, DESCRIPTION } from \"../fixtures/experience\";\nimport { monthYearFormat } from \"../../../common/helpers\";\nimport { Box, Section, Grid, Span, Text } from \"../../../common/components\";\n\nconst renderExperience = () =>\n  EXPERIENCE.map(({ key, company, job, duration }) => (\n    <ListItem key={key}>\n      <HeaderWrapper direction=\"column\">\n        <Text>\n          {company} - {job}\n        </Text>\n        <Span>\n          {monthYearFormat(duration.start).toLocaleLowerCase()}\n          {\" - \"}\n          {monthYearFormat(duration.end).toLocaleLowerCase() || \"now\"}\n        </Span>\n      </HeaderWrapper>\n      <ul>{renderDescription(company)}</ul>\n    </ListItem>\n  ));\n\nconst renderDescription = company =>\n  DESCRIPTION[company].map((pt, i) => (\n    <li key={`${company}_${i}`}>\n      <Span>{pt}</Span>\n    </li>\n  ));\n\nexport const Experience = () => {\n  return (\n    <Section>\n      <Grid direction=\"column\">\n        <Text>---- experience ----</Text>\n        <Box direction=\"column\">\n          <List>{renderExperience()}</List>\n        </Box>\n      </Grid>\n    </Section>\n  );\n};\n\nconst ListItem = styled.li`\n  margin-bottom: 30px;\n`;\n\nconst List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nconst HeaderWrapper = styled(Box)`\n  margin-bottom: 15px;\n`;\n","// @flow\nimport React from \"react\";\nimport { Skills } from \"./components/skills\";\nimport { Experience } from \"./components/experience\";\nimport { Container, Grid, RouteLink } from \"../../common/components\";\n\nexport const Resume = () => {\n  return (\n    <Container align=\"center\" justify=\"center\">\n      <Grid direction=\"column\">\n        <RouteLink to=\"/\">back</RouteLink>\n        <Skills />\n        <Experience />\n      </Grid>\n    </Container>\n  );\n};\n","// @flow\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Box, Grid, RouteLink } from \"../../common/components\";\n\nconst Container = styled(Box)`\n  flex-direction: column;\n`;\n\nexport const Secret = () => {\n  return (\n    <Container align=\"center\" justify=\"center\">\n      <Grid direction=\"column\">\n        <RouteLink to=\"/\">back</RouteLink>\n        <span role=\"img\" aria-label=\"hush emoji\">\n          🤫keep it a secret\n        </span>\n      </Grid>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Container } from \"./common/components\";\nimport { background } from \"./common/constants/colors\";\nimport { Home } from \"./components/home\";\nimport { Projects } from \"./components/projects\";\nimport { Resume } from \"./components/resume\";\nimport { Secret } from \"./components/secret\";\n\nconst Background = styled.div`\n  background: ${background};\n  display: flex;\n  align-items: center;\n  min-height: 100vh;\n  width: 100vw;\n`;\n\nconst App = () => {\n  return (\n    <Background>\n      <Container align=\"center\" justify=\"center\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/projects\">\n              <Projects />\n            </Route>\n            <Route path=\"/resume\">\n              <Resume />\n            </Route>\n            <Route path=\"/secret\">\n              <Secret />\n            </Route>\n          </Switch>\n        </Router>\n      </Container>\n    </Background>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}